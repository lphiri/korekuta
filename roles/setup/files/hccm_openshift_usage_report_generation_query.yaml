---
apiVersion: metering.openshift.io/v1alpha1
kind: ReportGenerationQuery
metadata:
  name: hccm-openshift-usage
spec:
  columns:
    - name: report_period_start
      type: timestamp
      unit: date
    - name: report_period_end
      type: timestamp
      unit: date
    - name: pod
      type: string
      unit: kubernetes_pod
    - name: namespace
      type: string
      unit: kubernetes_namespace
    - name: node
      type: string
      unit: kubernetes_node
    - name: interval_start
      type: timestamp
      unit: date
    - name: interval_end
      type: timestamp
      unit: date
    - name: pod_usage_cpu_core_seconds
      type: double
      unit: cpu_core_seconds
    - name: pod_request_cpu_core_seconds
      type: double
      unit: cpu_core_seconds
    - name: pod_usage_memory_byte_seconds
      type: double
      unit: byte_seconds
    - name: pod_request_memory_byte_seconds
      type: double
      unit: byte_seconds
  inputs:
    - name: ReportingStart
    - name: ReportingEnd
  query: |
    SELECT
      timestamp '{| default .Report.ReportingStart .Report.Inputs.ReportingStart| prestoTimestamp |}' AS report_period_start,
      timestamp '{| default .Report.ReportingEnd .Report.Inputs.ReportingEnd | prestoTimestamp |}' AS report_period_end,
      PCUR.pod,
      PCUR.namespace,
      PCUR.node,
      date_trunc('hour', PCUR."timestamp") as interval_start,
      date_trunc('hour', PCUR."timestamp") as interval_end,
      sum(PCUR.pod_usage_cpu_core_seconds) as pod_usage_cpu_core_seconds,
      sum(PCRR.pod_request_cpu_core_seconds) as pod_request_cpu_core_seconds,
      sum(PMUR.pod_usage_memory_byte_seconds) as pod_usage_memory_byte_seconds,
      sum(PMRR.pod_request_memory_byte_seconds) as pod_request_memory_byte_seconds
    FROM {| generationQueryViewName "pod-cpu-usage-raw" |} AS PCUR
    JOIN {| generationQueryViewName "pod-cpu-request-raw" |} AS PCRR
        ON PCUR.pod = PCRR.pod
          AND PCUR.namespace = PCRR.namespace
          AND PCUR.node = PCRR.node
          AND date_trunc('hour', PCUR."timestamp") = date_trunc('hour', PCRR."timestamp")
    JOIN {| generationQueryViewName "pod-memory-usage-raw" |} AS PMUR
        ON PCUR.pod = PMUR.pod
          AND PCUR.namespace = PMUR.namespace
          AND PCUR.node = PMUR.node
          AND PCUR."timestamp" = PMUR."timestamp"
    JOIN {| generationQueryViewName "pod-memory-request-raw" |} AS PMRR
        ON PCUR.pod = PMRR.pod
          AND PCUR.namespace = PMRR.namespace
          AND PCUR.node = PMRR.node
          AND PCUR."timestamp" = PMRR."timestamp"
    WHERE PCUR."timestamp" >= timestamp '{| default .Report.ReportingStart .Report.Inputs.ReportingStart | prestoTimestamp |}'
        AND PCUR."timestamp" <= timestamp '{| default .Report.ReportingEnd .Report.Inputs.ReportingEnd | prestoTimestamp |}'
    GROUP BY PCUR.namespace, PCUR.pod, PCUR.node, date_trunc('hour', PCUR."timestamp")
    ORDER BY namespace, pod, node ASC, interval_start asc, pod_usage_cpu_core_seconds DESC
  reportQueries:
    - pod-cpu-usage-raw
    - pod-cpu-request-raw
    - pod-memory-usage-raw
    - pod-memory-request-raw
  view:
    disabled: true
