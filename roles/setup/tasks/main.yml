---
# tasks file for setup

- name: Ensure needed variables are set
  fail:
    msg: "You must supply '-e {{ item }}=<{{ item }}>'.'"
  when: item is undefined
  with_items:
    - CLUSTER_ALIAS
    - CLUSTER_API
    - CLUSTER_USER
    - CLUSTER_TOKEN_PATH
    - CLUSTER_USER
    - OCP_METERING_NAMESPACE

- name: Check that CLUSTER_TOKEN_PATH exists
  stat:
    path: "{{ CLUSTER_TOKEN_PATH }}"
  register: cluster_token_stat_result

- name: CLUSTER_TOKEN_PATH does not exits
  fail:
    msg: "No file was found for CLUSTER_TOKEN_PATH at '{{ CLUSTER_TOKEN_PATH }}'."
  when:
    - not cluster_token_stat_result.stat.exists

- name: Generate random UUID for cluster identifier
  set_fact:
    cluster_id: "{{ 9999999999999999999999 | random | to_uuid }}"

- name: Define OCP Usage configuration defaults
  set_fact:
    ocp_usage_config_dir: "{{ ansible_env.HOME }}/.config/ocp_usage"
    ocp_usage_config_file: "{{ ansible_env.HOME }}/.config/ocp_usage/config.json"
  when:
    - OCP_USAGE_CONFIG_DIR is not defined

- name: Define OCP Usage configuration
  set_fact:
    ocp_usage_config_dir: "{{ OCP_USAGE_CONFIG_DIR }}"
    ocp_usage_config_file: "{{ OCP_USAGE_CONFIG_DIR }}/config.json"
  when:
    - OCP_USAGE_CONFIG_DIR is defined

- name: Create config data location
  file:
    path: "{{ ocp_usage_config_dir }}"
    state: directory
    mode: 0755

- name: Check that OCP Usage configuration exists
  stat:
    path: "{{ ocp_usage_config_file }}"
  register: ocp_usage_config_stat_result

- name: Fetch OCP config file
  fetch:
    src: "{{ ocp_usage_config_file }}"
    dest: "/tmp/ocp_config.json"
    flat: true
    fail_on_missing: true
  when:
    - ocp_usage_config_stat_result.stat.exists

- name: Read in OCP configuration file
  include_vars:
    file: "/tmp/ocp_config.json"
    name: config_content
  when:
    - ocp_usage_config_stat_result.stat.exists

- name: Install Openshift Python prerequisites
  yum:
    name: ["python-setuptools", "python-pip", "python-wheel"]
    state: present
  become: true

- name: Upgrade setuptools and pip to latest
  pip:
    name: ["setuptools", "pip"]
    extra_args: --upgrade

- name: Install Openshift Python
  pip:
    name: openshift
    extra_args: --ignore-installed ipaddress

- name: Execute Openshift definition files
  k8s:
    state: present
    definition: "{{ item | from_yaml }}"
    host: "{{ CLUSTER_API }}"
    username: "{{ CLUSTER_USER }}"
    key_file: "{{ CLUSTER_TOKEN_PATH }}"
    namespace: "{{ OCP_METERING_NAMESPACE }}"
  with_file:
    - "files/hccm_openshift_usage_report_generation_query.yaml"
    - "files/hccm_openshift_usage_report.yaml"

- name: Create new setup data configuration
  template:
    src: 'templates/config.j2'
    dest: '{{ ocp_usage_config_file }}'
  when:
    - config_content is not defined
    - not ocp_usage_config_stat_result.stat.exists

- name: Replace setup data configuration
  template:
    src: 'templates/config.j2'
    dest: '{{ ocp_usage_config_file }}'
  when:
    - config_content is defined
    - config_content.get('ocp_api') != CLUSTER_API
    - config_content.get('ocp_user') != CLUSTER_USER
    - config_content.get('ocp_token_file') != CLUSTER_TOKEN_PATH
    - config_content.get('cluster_alias') != CLUSTER_ALIAS
    - config_content.get('cluster_id') != cluster_id
    - config_content.get('ocp_metering_namespace') != OCP_METERING_NAMESPACE

- debug:
    msg: "Use the following value, {{ cluster_id }}, for the cluster identifier when configuring an OCP provider for {{ CLUSTER_ALIAS }} cluster in Cost Management."
  when:
    - config_json is defined
